{"version":3,"file":"static/js/170.f83f2032.chunk.js","mappings":"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","sources":["sections/auth/jwt/jwt-login-view.tsx","pages/auth/jwt/login.tsx","../node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js","../node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@mui/material/internal/svg-icons/ErrorOutline.js","../node_modules/@mui/material/internal/svg-icons/InfoOutlined.js","../node_modules/@mui/material/Alert/Alert.js","../node_modules/@mui/material/internal/svg-icons/Close.js"],"sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as Yup from 'yup';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport Alert from '@mui/material/Alert';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n// routes\r\nimport { useRouter, useSearchParams } from 'src/routes/hooks';\r\n// config\r\nimport { PATH_AFTER_LOGIN } from 'src/config-global';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// auth\r\nimport { useAuthContext } from 'src/auth/hooks';\r\n// components\r\nimport FormProvider, { RHFCheckbox, RHFTextField } from 'src/components/hook-form';\r\nimport Iconify from 'src/components/iconify';\r\n// locales\r\nimport { useLocales } from 'src/locales';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function JwtLoginView() {\r\n  const { login } = useAuthContext();\r\n\r\n  const { t } = useLocales();\r\n\r\n  const router = useRouter();\r\n\r\n  const theme = useTheme();\r\n\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const searchParams = useSearchParams();\r\n\r\n  const returnTo = searchParams.get('returnTo');\r\n\r\n  const password = useBoolean();\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    username: Yup.string().required('Tên đăng nhập là bắt buộc !'),\r\n    password: Yup.string().required('Mật khẩu là bắt buộc !'),\r\n  });\r\n\r\n  const defaultValues = {\r\n    username: 'qtv01',\r\n    password: '123456',\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(LoginSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = handleSubmit(async (data) => {\r\n    try {\r\n      await login?.(data.username, data.password);\r\n\r\n      router.push(returnTo || PATH_AFTER_LOGIN);\r\n    } catch (error) {\r\n      console.error(error);\r\n      reset();\r\n      setErrorMsg(typeof error === 'string' ? error : error.msg);\r\n    }\r\n  });\r\n\r\n  const renderHead = (\r\n    <Stack spacing={1} sx={{ mb: 3 }} alignItems=\"center\">\r\n      <Avatar\r\n        sizes=\"large\"\r\n        alt=\"Avatar\"\r\n        src=\"/assets/images/login/login_avatar.png\"\r\n        sx={{ width: 60, height: 60 }}\r\n      />\r\n\r\n      <Typography variant=\"h4\" fontWeight={900} align=\"center\">\r\n        {t('Đăng nhập tài khoản')}\r\n      </Typography>\r\n    </Stack>\r\n  );\r\n\r\n  const renderForm = (\r\n    <Stack spacing={2.5}>\r\n      {!!errorMsg && <Alert severity=\"error\">{errorMsg}</Alert>}\r\n\r\n      <RHFTextField fullWidth variant=\"filled\" name=\"username\" label={t('Tên đăng nhập...')} />\r\n\r\n      <RHFTextField\r\n        fullWidth\r\n        variant=\"filled\"\r\n        name=\"password\"\r\n        label={t('Mật khẩu...')}\r\n        type={password.value ? 'text' : 'password'}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton onClick={password.onToggle} edge=\"end\">\r\n                <Iconify icon={password.value ? 'solar:eye-bold' : 'solar:eye-closed-bold'} />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <RHFCheckbox name=\"save\" label=\"Lưu tài khoản đăng nhập cho các lần sau.\" />\r\n\r\n      <LoadingButton\r\n        fullWidth\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        loading={isSubmitting}\r\n        sx={{ textTransform: 'uppercase' }}\r\n      >\r\n        {t('Đăng nhập')}\r\n      </LoadingButton>\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={onSubmit}>\r\n      <Stack\r\n        justifyContent=\"center\"\r\n        sx={{\r\n          px: 5,\r\n          height: '100vh',\r\n          backgroundImage:\r\n            theme.palette.mode === 'light'\r\n              ? 'linear-gradient(to top, #F9FAFB 0%, #DFE3E8 100%)'\r\n              : 'linear-gradient(to top, #161C24 0%, #454F5B 100%)',\r\n        }}\r\n      >\r\n        {renderHead}\r\n\r\n        {renderForm}\r\n      </Stack>\r\n    </FormProvider>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\nimport { useEffect } from 'react';\r\nimport { useAuthContext } from 'src/auth/hooks';\r\nimport { IS_ONLINE, PATH_AFTER_LOGIN } from 'src/config-global';\r\nimport { useRouter, useSearchParams } from 'src/routes/hooks';\r\n// sections\r\nimport { JwtLoginView } from 'src/sections/auth/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LoginPage() {\r\n  const { login } = useAuthContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const searchParams = useSearchParams();\r\n\r\n  const returnTo = searchParams.get('returnTo');\r\n\r\n  useEffect(() => {\r\n    const handleLogin = async () => {\r\n      await login?.('qtv01', '123456');\r\n\r\n      router.push(returnTo || PATH_AFTER_LOGIN);\r\n    };\r\n\r\n    if (!IS_ONLINE) {\r\n      handleLogin();\r\n    }\r\n  }, [returnTo]);\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Học liệu điện tử IIT</title>\r\n      </Helmet>\r\n\r\n      {IS_ONLINE && <JwtLoginView />}\r\n    </>\r\n  );\r\n}\r\n","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"children\", \"className\", \"closeText\", \"color\", \"components\", \"componentsProps\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"slotProps\", \"slots\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, lighten } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nimport alertClasses, { getAlertUtilityClass } from './alertClasses';\nimport IconButton from '../IconButton';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  const color = ownerState.color || ownerState.severity;\n  return _extends({}, theme.typography.body2, {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px'\n  }, color && ownerState.variant === 'standard' && {\n    color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n    backgroundColor: theme.vars ? theme.vars.palette.Alert[`${color}StandardBg`] : getBackgroundColor(theme.palette[color].light, 0.9),\n    [`& .${alertClasses.icon}`]: theme.vars ? {\n      color: theme.vars.palette.Alert[`${color}IconColor`]\n    } : {\n      color: theme.palette[color].main\n    }\n  }, color && ownerState.variant === 'outlined' && {\n    color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n    border: `1px solid ${(theme.vars || theme).palette[color].light}`,\n    [`& .${alertClasses.icon}`]: theme.vars ? {\n      color: theme.vars.palette.Alert[`${color}IconColor`]\n    } : {\n      color: theme.palette[color].main\n    }\n  }, color && ownerState.variant === 'filled' && _extends({\n    fontWeight: theme.typography.fontWeightMedium\n  }, theme.vars ? {\n    color: theme.vars.palette.Alert[`${color}FilledColor`],\n    backgroundColor: theme.vars.palette.Alert[`${color}FilledBg`]\n  } : {\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main,\n    color: theme.palette.getContrastText(theme.palette[color].main)\n  }));\n});\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0',\n  minWidth: 0,\n  overflow: 'auto'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  var _ref, _slots$closeButton, _ref2, _slots$closeIcon, _slotProps$closeButto, _slotProps$closeIcon;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n  const {\n      action,\n      children,\n      className,\n      closeText = 'Close',\n      color,\n      components = {},\n      componentsProps = {},\n      icon,\n      iconMapping = defaultIconMapping,\n      onClose,\n      role = 'alert',\n      severity = 'success',\n      slotProps = {},\n      slots = {},\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    severity,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const AlertCloseButton = (_ref = (_slots$closeButton = slots.closeButton) != null ? _slots$closeButton : components.CloseButton) != null ? _ref : IconButton;\n  const AlertCloseIcon = (_ref2 = (_slots$closeIcon = slots.closeIcon) != null ? _slots$closeIcon : components.CloseIcon) != null ? _ref2 : CloseIcon;\n  const closeButtonProps = (_slotProps$closeButto = slotProps.closeButton) != null ? _slotProps$closeButto : componentsProps.closeButton;\n  const closeIconProps = (_slotProps$closeIcon = slotProps.closeIcon) != null ? _slotProps$closeIcon : componentsProps.closeIcon;\n  return /*#__PURE__*/_jsxs(AlertRoot, _extends({\n    role: role,\n    elevation: 0,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [icon !== false ? /*#__PURE__*/_jsx(AlertIcon, {\n      ownerState: ownerState,\n      className: classes.icon,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(AlertMessage, {\n      ownerState: ownerState,\n      className: classes.message,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: /*#__PURE__*/_jsx(AlertCloseButton, _extends({\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose\n      }, closeButtonProps, {\n        children: /*#__PURE__*/_jsx(AlertCloseIcon, _extends({\n          fontSize: \"small\"\n        }, closeIconProps))\n      }))\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The color of the component. Unless provided, the value is taken from the `severity` prop.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    CloseButton: PropTypes.elementType,\n    CloseIcon: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `components` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    closeButton: PropTypes.elementType,\n    closeIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');"],"names":["JwtLoginView","login","useAuthContext","t","useLocales","router","useRouter","theme","useTheme","_useState","useState","_useState2","_slicedToArray","errorMsg","setErrorMsg","returnTo","useSearchParams","get","password","useBoolean","LoginSchema","Yup","shape","username","required","methods","useForm","resolver","yupResolver","defaultValues","reset","handleSubmit","isSubmitting","formState","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","push","PATH_AFTER_LOGIN","t0","console","error","msg","stop","_x","apply","arguments","renderHead","_jsxs","Stack","spacing","sx","mb","alignItems","children","_jsx","Avatar","sizes","alt","src","width","height","Typography","variant","fontWeight","align","renderForm","Alert","severity","RHFTextField","fullWidth","name","label","type","value","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onToggle","edge","Iconify","icon","RHFCheckbox","LoadingButton","color","size","loading","textTransform","FormProvider","justifyContent","px","backgroundImage","palette","mode","LoginPage","useEffect","handleLogin","IS_ONLINE","_Fragment","Helmet","createSvgIcon","d","_excluded","AlertRoot","styled","Paper","slot","overridesResolver","props","styles","ownerState","root","concat","capitalize","_ref3","getColor","darken","lighten","getBackgroundColor","_extends","typography","body2","backgroundColor","display","padding","_defineProperty","vars","light","alertClasses","main","border","fontWeightMedium","dark","getContrastText","AlertIcon","marginRight","fontSize","opacity","AlertMessage","message","minWidth","overflow","AlertAction","action","marginLeft","defaultIconMapping","success","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","ErrorOutlineIcon","info","InfoOutlinedIcon","React","inProps","ref","_slots$closeButton","_ref2","_slots$closeIcon","_slotProps$closeButto","_slotProps$closeIcon","useThemeProps","className","_props$closeText","closeText","_props$components","components","_props$componentsProp","componentsProps","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","_props$slotProps","slotProps","_props$slots","slots","_props$variant","other","_objectWithoutPropertiesLoose","classes","composeClasses","getAlertUtilityClass","useUtilityClasses","AlertCloseButton","closeButton","CloseButton","AlertCloseIcon","closeIcon","CloseIcon","closeButtonProps","closeIconProps","elevation","clsx","title"],"sourceRoot":""}